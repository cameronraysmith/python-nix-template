if has nix; then
  watch_file \
    nix/modules/{python,packages,devshell}.nix \
    nix/modules/*.nix
  if ! use flake .#default --impure --accept-flake-config --print-build-logs
  then
      echo "nix flake could not be built; update flake.nix and run direnv allow/reload" >&2
  fi
  printf "\nrun \`nix flake update --impure && nix flake check --impure\` to update the flake lockfile."
  printf "\nuse \`direnv revoke\` to unload the dev environment or \`direnv allow\` to reload it.\n\n"
else
  printf "\nNix is not installed or not available in your PATH. You can either:\n"
  printf "1. Run \`make bootstrap\` from the Makefile to set up nix\n"
  printf "2. Visit https://nix.dev to find instructions on installing nix\n\n"
fi

if [ -f .env ]; then
  dotenv
else
  printf "You can create a .env file to add environment variables\n\n"
fi
